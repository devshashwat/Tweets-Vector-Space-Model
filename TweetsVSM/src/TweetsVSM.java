import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.*;

/*
Instructions:

Before running, add two jar files common-lang3.jar and opencsv-5.6.jar to Files > Project Structures > Dependencies
These are the external libraries used to read csv files in java.
Using Buffered Reader can do more harm because they use delimiter and tweets can contain any type of words because they
do not have to follow grammatical rules.

We have used a sample Tweets data here. We will be using the large database of tweets related to COVID - 19 in final presentation.

When Run and debugging keep thw Tweets and stop words file in same folder as this TweetsVSM.java file.
All the input for Tweets and stop words have functions but are called in the main function
All the Test Cases have functions which are called in main function with test values.
this program gives VSM tf idf and Search Query Test Cases for ranked search as output.
Expected output for Search Query Test cases is also included as a comment in end of this code
 */

import com.opencsv.CSVReader;
import com.opencsv.exceptions.CsvValidationException;

public class TweetsVSM {

    //attributes
    private final String[] myDocs;
    private final ArrayList<String> termList;
    private final ArrayList<ArrayList<Doc>> docLists;
    private static ArrayList<String> stopwords = new ArrayList<String>();

    // Method to read the stopword.txt file
    public static void StopWord(String StopFile) throws IOException {
        BufferedReader bufReader = new BufferedReader(new FileReader(StopFile)); // read file
        String line = bufReader.readLine();
        line = line.toLowerCase(); // Turns it into lowercase and Reads each line
        while (line != null) {
            stopwords.add(line); // Adds line to the stop words ArrayList
            line = bufReader.readLine();
        }
        bufReader.close();
    }

    // Constructor for the Class TweetsVSM
    public TweetsVSM(String[] docs) {
        myDocs = docs;
        termList = new ArrayList<String>();
        docLists = new ArrayList<ArrayList<Doc>>();
        ArrayList<Doc> docList;
        for(int i=0;i<myDocs.length;i++) {
            // this regex takes only alphanumeric values as words with an exception to ' symbol
            // thus, this naturally uses spaces, punctuation and symbols as delimiter except for '
            String[] words = myDocs[i].split("(?!')([\\W]+)"); // Tokenization of the Tweets
            String word;

            // Removing stop words from the tokenized tweets using the stop words arraylist
            ArrayList<String> builder = new ArrayList<String>();
            for (String word1 : words) {
                if (!stopwords.contains(word1)) {
                    builder.add(word1);
                }
            }
            words = builder.toArray(new String[builder.size()]);

            for (String s : words) {
                boolean match = false;
                word = s;
                if (!termList.contains(word)) {
                    termList.add(word);
                    docList = new ArrayList<Doc>();
                    Doc doc = new Doc(i, 1);
                    docList.add(doc);
                    docLists.add(docList);
                } else {
                    int index = termList.indexOf(word);
                    docList = docLists.get(index);

                    for (Doc did : docList) {
                        if (did.docId == i) {
                            did.tw++;
                            match = true;
                            break;
                        }

                    }
                    if (!match) {
                        Doc doc = new Doc(i, 1);
                        docList.add(doc);
                    }
                }
            }

        }

        // This computes the tf-idf
        int N = myDocs.length;
        // This is done for normalization
        double[] docLength = new double[N];
        // Updating the doc length
        for(int i=0;i<termList.size();i++) {
            docList = docLists.get(i);
            int df = docList.size();
            Doc doc;
            for(int j=0;j<docList.size();j++) {
                doc = docList.get(j);
                double tfidf = (1+Math.log10(doc.tw)) * Math.log10(N * 1.0/df);
                docLength[doc.docId] += Math.pow(tfidf,2);
                doc.tw = tfidf;
                docList.set(j,doc);
            }
        }
        // Updating doc length
        for(int i=0;i<N;i++) {
            docLength[i] = Math.sqrt(docLength[i]);
        }
    }

    // Method for ranked search for the Test Cases
    public void rankSearch(String[] query) {
        HashMap<Integer, Double> docs = new HashMap<Integer, Double>();

        ArrayList<Doc> docList;
        for(String term:query) {
            term = term.toLowerCase();
            int index = termList.indexOf(term);
            if(index <0) continue;
            docList = docLists.get(index);
            double qtfidf = (1+Math.log10(1)) * Math.log10(myDocs.length*1.0/docList.size());

            Doc doc;
            //Normalize the vectors
            for(int i=0;i<docList.size();i++) {
                doc = docList.get(i);
                double score = doc.tw * qtfidf;

                if(!docs.containsKey(doc.docId)) {
                    docs.put(doc.docId, score);
                }
                else {
                    score += docs.get(doc.docId);
                    docs.put(doc.docId, score);
                }
            }
        }
        // Applying the sort by values method to sort the output in descending order
        System.out.println(sortByValues(docs));
    }

    public String toString() {
        String outString = "";
        ArrayList<Doc> docList;
        for(int i=0;i<termList.size();i++) {
            outString += String.format("%-15s", termList.get(i));
            docList = docLists.get(i);
            for (Doc doc : docList) {
                outString += doc + "\t";
            }
            outString += "\n";
        }
        return outString;
    }

    // Sorting the Search Query Output in Descending Order.
    private static HashMap sortByValues(HashMap map) {
        List list = new LinkedList(map.entrySet());
        // Defined Custom Comparator here
        Collections.sort(list, new Comparator() {
            public int compare(Object o1, Object o2) {
                return ((Comparable) ((Map.Entry) (o2)).getValue()).compareTo(((Map.Entry) (o1)).getValue());
            }
        });
        // Here I am copying the sorted list in HashMap
        // using LinkedHashMap to preserve the insertion order
        HashMap sortedHashMap = new LinkedHashMap();
        for (Iterator it = list.iterator(); it.hasNext();) {
            Map.Entry entry = (Map.Entry) it.next();
            sortedHashMap.put(entry.getKey(), entry.getValue());
        }
        return sortedHashMap;
    }

    public static void main(String[] args) throws IOException, CsvValidationException {

        // reading the stop word text file by calling stop word function
        StopWord("/Users/shashwatmishra/Desktop/Shashwat’s MacBook Pro/School/Spring Sem 2215/ISTE 612 - Text Mining/Lab 1/TweetsVSM/src/stopwords.txt");

        // Loading the Tweets CSV file to the program
        List<List<String>> result = new ArrayList<>();
        try (CSVReader csvReader = new CSVReader(new FileReader("/Users/shashwatmishra/Desktop/Shashwat’s MacBook Pro/School/Spring Sem 2215/ISTE 612 - Text Mining/Lab 1/TweetsVSM/src/TweetSample.csv"))) {
            String[] values;
            while ((values = csvReader.readNext()) != null) {
                result.add(Arrays.asList(values));
            }
        }
        // Assigning docs the input string of tweets from the CSV File.
        String[] docs = new String[result.size()];
        for (int y = 0; y < result.size(); y++){
            // reading all tweets string as lowercase making it easier to compare term
             docs[y] = result.get(y).get(0).toLowerCase();
        }
        TweetsVSM VsmTweet = new TweetsVSM(docs);
        System.out.println(VsmTweet);

        // This is the 1st text case.
        String[] TestCase1 = {"Coronavirus", "testing", "fake"};
        System.out.println(" ");
        System.out.println(Arrays.toString(TestCase1));
        System.out.println("Output of the first test case is: ");
        VsmTweet.rankSearch(TestCase1);

        // This is the 2nd text case.
        String[] TestCase2 = {"Covid19", "fake", "vaccination"};
        System.out.println(" ");
        System.out.println(Arrays.toString(TestCase2));
        System.out.println("Output of the Second test case is: ");
        VsmTweet.rankSearch(TestCase2);

        // This is the 3rd text case.
        String[] TestCase3 = {"Covid19", "testing", "Vaccination","Fake"};
        System.out.println(" ");
        System.out.println(Arrays.toString(TestCase3));
        System.out.println("Output of the Third test case is: ");
        VsmTweet.rankSearch(TestCase3);

        //System.out.println(docs[874]);
    }
}

class Doc {
    int docId ;
    double tw;
    public Doc(int did, double tw) {
        docId = did;
        this.tw = tw;
    }
    public String toString() {
        return docId + " : " + tw;
    }
}

/*
Expected Output of Test Cases:

[Coronavirus, testing, fake]
Output of the first test case is:
{673=2.522078889600066, 713=2.522078889600066, 250=2.522078889600066, 47=0.2951012536668103, 48=0.2951012536668103, 50=0.2951012536668103, 51=0.2951012536668103, 52=0.2951012536668103, 54=0.2951012536668103, 55=0.2951012536668103, 277=0.20238996296069636, 288=0.20238996296069636, 53=0.20238996296069636, 577=0.20238996296069636, 611=0.20238996296069636, 613=0.20238996296069636, 890=0.20238996296069636, 892=0.20238996296069636, 138=0.20238996296069636, 650=0.20238996296069636, 185=0.20238996296069636, 701=0.20238996296069636, 449=0.20238996296069636, 194=0.20238996296069636, 733=0.20238996296069636, 478=0.20238996296069636, 498=0.20238996296069636, 593=0.041354332622149374, 642=0.041354332622149374, 173=0.041354332622149374, 768=0.031785841033622114, 257=0.031785841033622114, 5=0.031785841033622114, 263=0.031785841033622114, 527=0.031785841033622114, 784=0.031785841033622114, 21=0.031785841033622114, 789=0.031785841033622114, 791=0.031785841033622114, 280=0.031785841033622114, 282=0.031785841033622114, 801=0.031785841033622114, 548=0.031785841033622114, 550=0.031785841033622114, 810=0.031785841033622114, 819=0.031785841033622114, 308=0.031785841033622114, 564=0.031785841033622114, 309=0.031785841033622114, 822=0.031785841033622114, 567=0.031785841033622114, 59=0.031785841033622114, 317=0.031785841033622114, 574=0.031785841033622114, 64=0.031785841033622114, 326=0.031785841033622114, 584=0.031785841033622114, 843=0.031785841033622114, 332=0.031785841033622114, 590=0.031785841033622114, 341=0.031785841033622114, 344=0.031785841033622114, 90=0.031785841033622114, 347=0.031785841033622114, 605=0.031785841033622114, 612=0.031785841033622114, 107=0.031785841033622114, 621=0.031785841033622114, 112=0.031785841033622114, 625=0.031785841033622114, 374=0.031785841033622114, 119=0.031785841033622114, 126=0.031785841033622114, 902=0.031785841033622114, 905=0.031785841033622114, 652=0.031785841033622114, 143=0.031785841033622114, 399=0.031785841033622114, 655=0.031785841033622114, 400=0.031785841033622114, 913=0.031785841033622114, 664=0.031785841033622114, 668=0.031785841033622114, 165=0.031785841033622114, 426=0.031785841033622114, 938=0.031785841033622114, 428=0.031785841033622114, 429=0.031785841033622114, 180=0.031785841033622114, 948=0.031785841033622114, 439=0.031785841033622114, 951=0.031785841033622114, 953=0.031785841033622114, 954=0.031785841033622114, 708=0.031785841033622114, 454=0.031785841033622114, 710=0.031785841033622114, 966=0.031785841033622114, 463=0.031785841033622114, 720=0.031785841033622114, 723=0.031785841033622114, 724=0.031785841033622114, 471=0.031785841033622114, 727=0.031785841033622114, 221=0.031785841033622114, 734=0.031785841033622114, 227=0.031785841033622114, 740=0.031785841033622114, 488=0.031785841033622114, 746=0.031785841033622114, 493=0.031785841033622114, 499=0.031785841033622114, 500=0.031785841033622114, 245=0.031785841033622114, 761=0.031785841033622114, 254=0.031785841033622114}

[Covid19, fake, vaccination]
Output of the Second test case is:
{874=8.998494577650261, 250=2.523180349093951, 673=2.523180349093951, 713=2.522078889600066, 66=0.0014330318405529811, 184=0.0014330318405529811, 249=0.0014330318405529811, 334=0.0014330318405529811, 419=0.0014330318405529811, 758=0.0014330318405529811, 812=0.0014330318405529811, 2=0.0011014594938847913, 3=0.0011014594938847913, 4=0.0011014594938847913, 5=0.0011014594938847913, 6=0.0011014594938847913, 8=0.0011014594938847913, 9=0.0011014594938847913, 10=0.0011014594938847913, 12=0.0011014594938847913, 13=0.0011014594938847913, 15=0.0011014594938847913, 16=0.0011014594938847913, 17=0.0011014594938847913, 23=0.0011014594938847913, 24=0.0011014594938847913, 25=0.0011014594938847913, 27=0.0011014594938847913, 28=0.0011014594938847913, 30=0.0011014594938847913, 31=0.0011014594938847913, 32=0.0011014594938847913, 33=0.0011014594938847913, 36=0.0011014594938847913, 37=0.0011014594938847913, 39=0.0011014594938847913, 40=0.0011014594938847913, 41=0.0011014594938847913, 42=0.0011014594938847913, 43=0.0011014594938847913, 45=0.0011014594938847913, 46=0.0011014594938847913, 49=0.0011014594938847913, 56=0.0011014594938847913, 57=0.0011014594938847913, 58=0.0011014594938847913, 61=0.0011014594938847913, 63=0.0011014594938847913, 64=0.0011014594938847913, 67=0.0011014594938847913, 69=0.0011014594938847913, 72=0.0011014594938847913, 73=0.0011014594938847913, 77=0.0011014594938847913, 78=0.0011014594938847913, 80=0.0011014594938847913, 81=0.0011014594938847913, 86=0.0011014594938847913, 90=0.0011014594938847913, 91=0.0011014594938847913, 92=0.0011014594938847913, 93=0.0011014594938847913, 94=0.0011014594938847913, 96=0.0011014594938847913, 98=0.0011014594938847913, 99=0.0011014594938847913, 101=0.0011014594938847913, 102=0.0011014594938847913, 103=0.0011014594938847913, 104=0.0011014594938847913, 106=0.0011014594938847913, 107=0.0011014594938847913, 108=0.0011014594938847913, 112=0.0011014594938847913, 115=0.0011014594938847913, 116=0.0011014594938847913, 118=0.0011014594938847913, 120=0.0011014594938847913, 121=0.0011014594938847913, 122=0.0011014594938847913, 125=0.0011014594938847913, 130=0.0011014594938847913, 131=0.0011014594938847913, 132=0.0011014594938847913, 134=0.0011014594938847913, 136=0.0011014594938847913, 138=0.0011014594938847913, 143=0.0011014594938847913, 145=0.0011014594938847913, 146=0.0011014594938847913, 147=0.0011014594938847913, 148=0.0011014594938847913, 149=0.0011014594938847913, 151=0.0011014594938847913, 153=0.0011014594938847913, 155=0.0011014594938847913, 157=0.0011014594938847913, 158=0.0011014594938847913, 161=0.0011014594938847913, 165=0.0011014594938847913, 166=0.0011014594938847913, 169=0.0011014594938847913, 171=0.0011014594938847913, 172=0.0011014594938847913, 173=0.0011014594938847913, 175=0.0011014594938847913, 176=0.0011014594938847913, 177=0.0011014594938847913, 179=0.0011014594938847913, 183=0.0011014594938847913, 186=0.0011014594938847913, 187=0.0011014594938847913, 188=0.0011014594938847913, 192=0.0011014594938847913, 193=0.0011014594938847913, 194=0.0011014594938847913, 195=0.0011014594938847913, 196=0.0011014594938847913, 197=0.0011014594938847913, 198=0.0011014594938847913, 200=0.0011014594938847913, 201=0.0011014594938847913, 203=0.0011014594938847913, 204=0.0011014594938847913, 207=0.0011014594938847913, 209=0.0011014594938847913, 210=0.0011014594938847913, 212=0.0011014594938847913, 213=0.0011014594938847913, 214=0.0011014594938847913, 217=0.0011014594938847913, 218=0.0011014594938847913, 219=0.0011014594938847913, 220=0.0011014594938847913, 221=0.0011014594938847913, 222=0.0011014594938847913, 223=0.0011014594938847913, 226=0.0011014594938847913, 229=0.0011014594938847913, 230=0.0011014594938847913, 235=0.0011014594938847913, 236=0.0011014594938847913, 237=0.0011014594938847913, 238=0.0011014594938847913, 241=0.0011014594938847913, 243=0.0011014594938847913, 244=0.0011014594938847913, 245=0.0011014594938847913, 246=0.0011014594938847913, 247=0.0011014594938847913, 248=0.0011014594938847913, 253=0.0011014594938847913, 255=0.0011014594938847913, 257=0.0011014594938847913, 259=0.0011014594938847913, 260=0.0011014594938847913, 261=0.0011014594938847913, 262=0.0011014594938847913, 264=0.0011014594938847913, 265=0.0011014594938847913, 266=0.0011014594938847913, 267=0.0011014594938847913, 268=0.0011014594938847913, 269=0.0011014594938847913, 270=0.0011014594938847913, 272=0.0011014594938847913, 275=0.0011014594938847913, 277=0.0011014594938847913, 278=0.0011014594938847913, 281=0.0011014594938847913, 283=0.0011014594938847913, 284=0.0011014594938847913, 287=0.0011014594938847913, 288=0.0011014594938847913, 289=0.0011014594938847913, 290=0.0011014594938847913, 292=0.0011014594938847913, 295=0.0011014594938847913, 298=0.0011014594938847913, 302=0.0011014594938847913, 304=0.0011014594938847913, 305=0.0011014594938847913, 307=0.0011014594938847913, 308=0.0011014594938847913, 309=0.0011014594938847913, 313=0.0011014594938847913, 315=0.0011014594938847913, 316=0.0011014594938847913, 318=0.0011014594938847913, 320=0.0011014594938847913, 322=0.0011014594938847913, 328=0.0011014594938847913, 329=0.0011014594938847913, 331=0.0011014594938847913, 332=0.0011014594938847913, 335=0.0011014594938847913, 336=0.0011014594938847913, 337=0.0011014594938847913, 338=0.0011014594938847913, 339=0.0011014594938847913, 340=0.0011014594938847913, 342=0.0011014594938847913, 344=0.0011014594938847913, 346=0.0011014594938847913, 347=0.0011014594938847913, 348=0.0011014594938847913, 349=0.0011014594938847913, 350=0.0011014594938847913, 352=0.0011014594938847913, 353=0.0011014594938847913, 355=0.0011014594938847913, 357=0.0011014594938847913, 358=0.0011014594938847913, 360=0.0011014594938847913, 361=0.0011014594938847913, 363=0.0011014594938847913, 364=0.0011014594938847913, 366=0.0011014594938847913, 368=0.0011014594938847913, 369=0.0011014594938847913, 371=0.0011014594938847913, 372=0.0011014594938847913, 373=0.0011014594938847913, 375=0.0011014594938847913, 378=0.0011014594938847913, 380=0.0011014594938847913, 381=0.0011014594938847913, 383=0.0011014594938847913, 385=0.0011014594938847913, 386=0.0011014594938847913, 387=0.0011014594938847913, 388=0.0011014594938847913, 389=0.0011014594938847913, 390=0.0011014594938847913, 391=0.0011014594938847913, 394=0.0011014594938847913, 396=0.0011014594938847913, 397=0.0011014594938847913, 399=0.0011014594938847913, 401=0.0011014594938847913, 402=0.0011014594938847913, 403=0.0011014594938847913, 406=0.0011014594938847913, 407=0.0011014594938847913, 408=0.0011014594938847913, 409=0.0011014594938847913, 410=0.0011014594938847913, 411=0.0011014594938847913, 412=0.0011014594938847913, 413=0.0011014594938847913, 414=0.0011014594938847913, 416=0.0011014594938847913, 417=0.0011014594938847913, 418=0.0011014594938847913, 420=0.0011014594938847913, 424=0.0011014594938847913, 426=0.0011014594938847913, 428=0.0011014594938847913, 429=0.0011014594938847913, 431=0.0011014594938847913, 432=0.0011014594938847913, 434=0.0011014594938847913, 436=0.0011014594938847913, 438=0.0011014594938847913, 439=0.0011014594938847913, 441=0.0011014594938847913, 445=0.0011014594938847913, 446=0.0011014594938847913, 448=0.0011014594938847913, 450=0.0011014594938847913, 452=0.0011014594938847913, 455=0.0011014594938847913, 457=0.0011014594938847913, 458=0.0011014594938847913, 461=0.0011014594938847913, 462=0.0011014594938847913, 463=0.0011014594938847913, 464=0.0011014594938847913, 466=0.0011014594938847913, 468=0.0011014594938847913, 469=0.0011014594938847913, 470=0.0011014594938847913, 471=0.0011014594938847913, 475=0.0011014594938847913, 476=0.0011014594938847913, 478=0.0011014594938847913, 479=0.0011014594938847913, 480=0.0011014594938847913, 484=0.0011014594938847913, 487=0.0011014594938847913, 488=0.0011014594938847913, 490=0.0011014594938847913, 491=0.0011014594938847913, 493=0.0011014594938847913, 494=0.0011014594938847913, 496=0.0011014594938847913, 498=0.0011014594938847913, 499=0.0011014594938847913, 502=0.0011014594938847913, 503=0.0011014594938847913, 504=0.0011014594938847913, 505=0.0011014594938847913, 509=0.0011014594938847913, 510=0.0011014594938847913, 511=0.0011014594938847913, 512=0.0011014594938847913, 513=0.0011014594938847913, 514=0.0011014594938847913, 516=0.0011014594938847913, 517=0.0011014594938847913, 518=0.0011014594938847913, 519=0.0011014594938847913, 522=0.0011014594938847913, 523=0.0011014594938847913, 524=0.0011014594938847913, 525=0.0011014594938847913, 526=0.0011014594938847913, 527=0.0011014594938847913, 528=0.0011014594938847913, 530=0.0011014594938847913, 531=0.0011014594938847913, 532=0.0011014594938847913, 533=0.0011014594938847913, 538=0.0011014594938847913, 539=0.0011014594938847913, 541=0.0011014594938847913, 542=0.0011014594938847913, 544=0.0011014594938847913, 547=0.0011014594938847913, 548=0.0011014594938847913, 549=0.0011014594938847913, 551=0.0011014594938847913, 553=0.0011014594938847913, 556=0.0011014594938847913, 557=0.0011014594938847913, 558=0.0011014594938847913, 559=0.0011014594938847913, 561=0.0011014594938847913, 562=0.0011014594938847913, 563=0.0011014594938847913, 566=0.0011014594938847913, 569=0.0011014594938847913, 572=0.0011014594938847913, 574=0.0011014594938847913, 575=0.0011014594938847913, 576=0.0011014594938847913, 578=0.0011014594938847913, 579=0.0011014594938847913, 580=0.0011014594938847913, 581=0.0011014594938847913, 584=0.0011014594938847913, 585=0.0011014594938847913, 586=0.0011014594938847913, 587=0.0011014594938847913, 589=0.0011014594938847913, 590=0.0011014594938847913, 591=0.0011014594938847913, 593=0.0011014594938847913, 594=0.0011014594938847913, 595=0.0011014594938847913, 596=0.0011014594938847913, 597=0.0011014594938847913, 598=0.0011014594938847913, 601=0.0011014594938847913, 605=0.0011014594938847913, 606=0.0011014594938847913, 607=0.0011014594938847913, 608=0.0011014594938847913, 609=0.0011014594938847913, 610=0.0011014594938847913, 611=0.0011014594938847913, 612=0.0011014594938847913, 614=0.0011014594938847913, 616=0.0011014594938847913, 618=0.0011014594938847913, 621=0.0011014594938847913, 622=0.0011014594938847913, 623=0.0011014594938847913, 625=0.0011014594938847913, 626=0.0011014594938847913, 627=0.0011014594938847913, 628=0.0011014594938847913, 631=0.0011014594938847913, 632=0.0011014594938847913, 633=0.0011014594938847913, 636=0.0011014594938847913, 638=0.0011014594938847913, 641=0.0011014594938847913, 642=0.0011014594938847913, 643=0.0011014594938847913, 644=0.0011014594938847913, 645=0.0011014594938847913, 646=0.0011014594938847913, 647=0.0011014594938847913, 648=0.0011014594938847913, 649=0.0011014594938847913, 650=0.0011014594938847913, 654=0.0011014594938847913, 655=0.0011014594938847913, 656=0.0011014594938847913, 657=0.0011014594938847913, 658=0.0011014594938847913, 659=0.0011014594938847913, 660=0.0011014594938847913, 661=0.0011014594938847913, 662=0.0011014594938847913, 663=0.0011014594938847913, 665=0.0011014594938847913, 666=0.0011014594938847913, 667=0.0011014594938847913, 668=0.0011014594938847913, 670=0.0011014594938847913, 671=0.0011014594938847913, 675=0.0011014594938847913, 676=0.0011014594938847913, 680=0.0011014594938847913, 682=0.0011014594938847913, 683=0.0011014594938847913, 684=0.0011014594938847913, 688=0.0011014594938847913, 691=0.0011014594938847913, 692=0.0011014594938847913, 693=0.0011014594938847913, 694=0.0011014594938847913, 695=0.0011014594938847913, 696=0.0011014594938847913, 697=0.0011014594938847913, 698=0.0011014594938847913, 699=0.0011014594938847913, 700=0.0011014594938847913, 701=0.0011014594938847913, 706=0.0011014594938847913, 708=0.0011014594938847913, 709=0.0011014594938847913, 711=0.0011014594938847913, 715=0.0011014594938847913, 716=0.0011014594938847913, 718=0.0011014594938847913, 719=0.0011014594938847913, 720=0.0011014594938847913, 721=0.0011014594938847913, 722=0.0011014594938847913, 723=0.0011014594938847913, 725=0.0011014594938847913, 726=0.0011014594938847913, 727=0.0011014594938847913, 728=0.0011014594938847913, 729=0.0011014594938847913, 731=0.0011014594938847913, 732=0.0011014594938847913, 733=0.0011014594938847913, 734=0.0011014594938847913, 736=0.0011014594938847913, 737=0.0011014594938847913, 738=0.0011014594938847913, 739=0.0011014594938847913, 742=0.0011014594938847913, 743=0.0011014594938847913, 745=0.0011014594938847913, 746=0.0011014594938847913, 748=0.0011014594938847913, 749=0.0011014594938847913, 750=0.0011014594938847913, 752=0.0011014594938847913, 753=0.0011014594938847913, 754=0.0011014594938847913, 756=0.0011014594938847913, 757=0.0011014594938847913, 761=0.0011014594938847913, 762=0.0011014594938847913, 764=0.0011014594938847913, 765=0.0011014594938847913, 766=0.0011014594938847913, 767=0.0011014594938847913, 768=0.0011014594938847913, 769=0.0011014594938847913, 770=0.0011014594938847913, 771=0.0011014594938847913, 774=0.0011014594938847913, 776=0.0011014594938847913, 778=0.0011014594938847913, 780=0.0011014594938847913, 782=0.0011014594938847913, 783=0.0011014594938847913, 786=0.0011014594938847913, 787=0.0011014594938847913, 788=0.0011014594938847913, 790=0.0011014594938847913, 791=0.0011014594938847913, 792=0.0011014594938847913, 793=0.0011014594938847913, 794=0.0011014594938847913, 796=0.0011014594938847913, 797=0.0011014594938847913, 800=0.0011014594938847913, 801=0.0011014594938847913, 803=0.0011014594938847913, 804=0.0011014594938847913, 806=0.0011014594938847913, 808=0.0011014594938847913, 813=0.0011014594938847913, 814=0.0011014594938847913, 815=0.0011014594938847913, 816=0.0011014594938847913, 819=0.0011014594938847913, 820=0.0011014594938847913, 824=0.0011014594938847913, 825=0.0011014594938847913, 828=0.0011014594938847913, 830=0.0011014594938847913, 831=0.0011014594938847913, 833=0.0011014594938847913, 834=0.0011014594938847913, 840=0.0011014594938847913, 842=0.0011014594938847913, 843=0.0011014594938847913, 847=0.0011014594938847913, 848=0.0011014594938847913, 849=0.0011014594938847913, 852=0.0011014594938847913, 854=0.0011014594938847913, 857=0.0011014594938847913, 858=0.0011014594938847913, 861=0.0011014594938847913, 866=0.0011014594938847913, 867=0.0011014594938847913, 868=0.0011014594938847913, 869=0.0011014594938847913, 870=0.0011014594938847913, 871=0.0011014594938847913, 875=0.0011014594938847913, 877=0.0011014594938847913, 878=0.0011014594938847913, 880=0.0011014594938847913, 881=0.0011014594938847913, 883=0.0011014594938847913, 885=0.0011014594938847913, 886=0.0011014594938847913, 890=0.0011014594938847913, 891=0.0011014594938847913, 892=0.0011014594938847913, 893=0.0011014594938847913, 894=0.0011014594938847913, 895=0.0011014594938847913, 896=0.0011014594938847913, 897=0.0011014594938847913, 899=0.0011014594938847913, 900=0.0011014594938847913, 905=0.0011014594938847913, 906=0.0011014594938847913, 907=0.0011014594938847913, 908=0.0011014594938847913, 909=0.0011014594938847913, 910=0.0011014594938847913, 911=0.0011014594938847913, 912=0.0011014594938847913, 913=0.0011014594938847913, 914=0.0011014594938847913, 916=0.0011014594938847913, 917=0.0011014594938847913, 921=0.0011014594938847913, 922=0.0011014594938847913, 924=0.0011014594938847913, 925=0.0011014594938847913, 929=0.0011014594938847913, 930=0.0011014594938847913, 931=0.0011014594938847913, 935=0.0011014594938847913, 938=0.0011014594938847913, 939=0.0011014594938847913, 940=0.0011014594938847913, 941=0.0011014594938847913, 943=0.0011014594938847913, 944=0.0011014594938847913, 945=0.0011014594938847913, 947=0.0011014594938847913, 950=0.0011014594938847913, 954=0.0011014594938847913, 955=0.0011014594938847913, 956=0.0011014594938847913, 957=0.0011014594938847913, 958=0.0011014594938847913, 959=0.0011014594938847913, 960=0.0011014594938847913, 961=0.0011014594938847913, 967=0.0011014594938847913, 968=0.0011014594938847913, 969=0.0011014594938847913, 970=0.0011014594938847913, 977=0.0011014594938847913, 978=0.0011014594938847913, 982=0.0011014594938847913, 984=0.0011014594938847913, 985=0.0011014594938847913, 986=0.0011014594938847913, 989=0.0011014594938847913, 990=0.0011014594938847913, 992=0.0011014594938847913, 993=0.0011014594938847913, 994=0.0011014594938847913, 996=0.0011014594938847913, 997=0.0011014594938847913}

[Covid19, testing, Vaccination, Fake]
Output of the Third test case is:
{874=8.998494577650261, 250=2.523180349093951, 673=2.523180349093951, 713=2.522078889600066, 47=0.26331541263318814, 48=0.26331541263318814, 50=0.26331541263318814, 51=0.26331541263318814, 52=0.26331541263318814, 54=0.26331541263318814, 55=0.26331541263318814, 138=0.20349142245458116, 194=0.20349142245458116, 277=0.20349142245458116, 288=0.20349142245458116, 478=0.20349142245458116, 498=0.20349142245458116, 611=0.20349142245458116, 650=0.20349142245458116, 701=0.20349142245458116, 733=0.20349142245458116, 890=0.20349142245458116, 892=0.20349142245458116, 53=0.20238996296069636, 185=0.20238996296069636, 449=0.20238996296069636, 577=0.20238996296069636, 613=0.20238996296069636, 66=0.0014330318405529811, 184=0.0014330318405529811, 249=0.0014330318405529811, 334=0.0014330318405529811, 419=0.0014330318405529811, 758=0.0014330318405529811, 812=0.0014330318405529811, 2=0.0011014594938847913, 3=0.0011014594938847913, 4=0.0011014594938847913, 5=0.0011014594938847913, 6=0.0011014594938847913, 8=0.0011014594938847913, 9=0.0011014594938847913, 10=0.0011014594938847913, 12=0.0011014594938847913, 13=0.0011014594938847913, 15=0.0011014594938847913, 16=0.0011014594938847913, 17=0.0011014594938847913, 23=0.0011014594938847913, 24=0.0011014594938847913, 25=0.0011014594938847913, 27=0.0011014594938847913, 28=0.0011014594938847913, 30=0.0011014594938847913, 31=0.0011014594938847913, 32=0.0011014594938847913, 33=0.0011014594938847913, 36=0.0011014594938847913, 37=0.0011014594938847913, 39=0.0011014594938847913, 40=0.0011014594938847913, 41=0.0011014594938847913, 42=0.0011014594938847913, 43=0.0011014594938847913, 45=0.0011014594938847913, 46=0.0011014594938847913, 49=0.0011014594938847913, 56=0.0011014594938847913, 57=0.0011014594938847913, 58=0.0011014594938847913, 61=0.0011014594938847913, 63=0.0011014594938847913, 64=0.0011014594938847913, 67=0.0011014594938847913, 69=0.0011014594938847913, 72=0.0011014594938847913, 73=0.0011014594938847913, 77=0.0011014594938847913, 78=0.0011014594938847913, 80=0.0011014594938847913, 81=0.0011014594938847913, 86=0.0011014594938847913, 90=0.0011014594938847913, 91=0.0011014594938847913, 92=0.0011014594938847913, 93=0.0011014594938847913, 94=0.0011014594938847913, 96=0.0011014594938847913, 98=0.0011014594938847913, 99=0.0011014594938847913, 101=0.0011014594938847913, 102=0.0011014594938847913, 103=0.0011014594938847913, 104=0.0011014594938847913, 106=0.0011014594938847913, 107=0.0011014594938847913, 108=0.0011014594938847913, 112=0.0011014594938847913, 115=0.0011014594938847913, 116=0.0011014594938847913, 118=0.0011014594938847913, 120=0.0011014594938847913, 121=0.0011014594938847913, 122=0.0011014594938847913, 125=0.0011014594938847913, 130=0.0011014594938847913, 131=0.0011014594938847913, 132=0.0011014594938847913, 134=0.0011014594938847913, 136=0.0011014594938847913, 143=0.0011014594938847913, 145=0.0011014594938847913, 146=0.0011014594938847913, 147=0.0011014594938847913, 148=0.0011014594938847913, 149=0.0011014594938847913, 151=0.0011014594938847913, 153=0.0011014594938847913, 155=0.0011014594938847913, 157=0.0011014594938847913, 158=0.0011014594938847913, 161=0.0011014594938847913, 165=0.0011014594938847913, 166=0.0011014594938847913, 169=0.0011014594938847913, 171=0.0011014594938847913, 172=0.0011014594938847913, 173=0.0011014594938847913, 175=0.0011014594938847913, 176=0.0011014594938847913, 177=0.0011014594938847913, 179=0.0011014594938847913, 183=0.0011014594938847913, 186=0.0011014594938847913, 187=0.0011014594938847913, 188=0.0011014594938847913, 192=0.0011014594938847913, 193=0.0011014594938847913, 195=0.0011014594938847913, 196=0.0011014594938847913, 197=0.0011014594938847913, 198=0.0011014594938847913, 200=0.0011014594938847913, 201=0.0011014594938847913, 203=0.0011014594938847913, 204=0.0011014594938847913, 207=0.0011014594938847913, 209=0.0011014594938847913, 210=0.0011014594938847913, 212=0.0011014594938847913, 213=0.0011014594938847913, 214=0.0011014594938847913, 217=0.0011014594938847913, 218=0.0011014594938847913, 219=0.0011014594938847913, 220=0.0011014594938847913, 221=0.0011014594938847913, 222=0.0011014594938847913, 223=0.0011014594938847913, 226=0.0011014594938847913, 229=0.0011014594938847913, 230=0.0011014594938847913, 235=0.0011014594938847913, 236=0.0011014594938847913, 237=0.0011014594938847913, 238=0.0011014594938847913, 241=0.0011014594938847913, 243=0.0011014594938847913, 244=0.0011014594938847913, 245=0.0011014594938847913, 246=0.0011014594938847913, 247=0.0011014594938847913, 248=0.0011014594938847913, 253=0.0011014594938847913, 255=0.0011014594938847913, 257=0.0011014594938847913, 259=0.0011014594938847913, 260=0.0011014594938847913, 261=0.0011014594938847913, 262=0.0011014594938847913, 264=0.0011014594938847913, 265=0.0011014594938847913, 266=0.0011014594938847913, 267=0.0011014594938847913, 268=0.0011014594938847913, 269=0.0011014594938847913, 270=0.0011014594938847913, 272=0.0011014594938847913, 275=0.0011014594938847913, 278=0.0011014594938847913, 281=0.0011014594938847913, 283=0.0011014594938847913, 284=0.0011014594938847913, 287=0.0011014594938847913, 289=0.0011014594938847913, 290=0.0011014594938847913, 292=0.0011014594938847913, 295=0.0011014594938847913, 298=0.0011014594938847913, 302=0.0011014594938847913, 304=0.0011014594938847913, 305=0.0011014594938847913, 307=0.0011014594938847913, 308=0.0011014594938847913, 309=0.0011014594938847913, 313=0.0011014594938847913, 315=0.0011014594938847913, 316=0.0011014594938847913, 318=0.0011014594938847913, 320=0.0011014594938847913, 322=0.0011014594938847913, 328=0.0011014594938847913, 329=0.0011014594938847913, 331=0.0011014594938847913, 332=0.0011014594938847913, 335=0.0011014594938847913, 336=0.0011014594938847913, 337=0.0011014594938847913, 338=0.0011014594938847913, 339=0.0011014594938847913, 340=0.0011014594938847913, 342=0.0011014594938847913, 344=0.0011014594938847913, 346=0.0011014594938847913, 347=0.0011014594938847913, 348=0.0011014594938847913, 349=0.0011014594938847913, 350=0.0011014594938847913, 352=0.0011014594938847913, 353=0.0011014594938847913, 355=0.0011014594938847913, 357=0.0011014594938847913, 358=0.0011014594938847913, 360=0.0011014594938847913, 361=0.0011014594938847913, 363=0.0011014594938847913, 364=0.0011014594938847913, 366=0.0011014594938847913, 368=0.0011014594938847913, 369=0.0011014594938847913, 371=0.0011014594938847913, 372=0.0011014594938847913, 373=0.0011014594938847913, 375=0.0011014594938847913, 378=0.0011014594938847913, 380=0.0011014594938847913, 381=0.0011014594938847913, 383=0.0011014594938847913, 385=0.0011014594938847913, 386=0.0011014594938847913, 387=0.0011014594938847913, 388=0.0011014594938847913, 389=0.0011014594938847913, 390=0.0011014594938847913, 391=0.0011014594938847913, 394=0.0011014594938847913, 396=0.0011014594938847913, 397=0.0011014594938847913, 399=0.0011014594938847913, 401=0.0011014594938847913, 402=0.0011014594938847913, 403=0.0011014594938847913, 406=0.0011014594938847913, 407=0.0011014594938847913, 408=0.0011014594938847913, 409=0.0011014594938847913, 410=0.0011014594938847913, 411=0.0011014594938847913, 412=0.0011014594938847913, 413=0.0011014594938847913, 414=0.0011014594938847913, 416=0.0011014594938847913, 417=0.0011014594938847913, 418=0.0011014594938847913, 420=0.0011014594938847913, 424=0.0011014594938847913, 426=0.0011014594938847913, 428=0.0011014594938847913, 429=0.0011014594938847913, 431=0.0011014594938847913, 432=0.0011014594938847913, 434=0.0011014594938847913, 436=0.0011014594938847913, 438=0.0011014594938847913, 439=0.0011014594938847913, 441=0.0011014594938847913, 445=0.0011014594938847913, 446=0.0011014594938847913, 448=0.0011014594938847913, 450=0.0011014594938847913, 452=0.0011014594938847913, 455=0.0011014594938847913, 457=0.0011014594938847913, 458=0.0011014594938847913, 461=0.0011014594938847913, 462=0.0011014594938847913, 463=0.0011014594938847913, 464=0.0011014594938847913, 466=0.0011014594938847913, 468=0.0011014594938847913, 469=0.0011014594938847913, 470=0.0011014594938847913, 471=0.0011014594938847913, 475=0.0011014594938847913, 476=0.0011014594938847913, 479=0.0011014594938847913, 480=0.0011014594938847913, 484=0.0011014594938847913, 487=0.0011014594938847913, 488=0.0011014594938847913, 490=0.0011014594938847913, 491=0.0011014594938847913, 493=0.0011014594938847913, 494=0.0011014594938847913, 496=0.0011014594938847913, 499=0.0011014594938847913, 502=0.0011014594938847913, 503=0.0011014594938847913, 504=0.0011014594938847913, 505=0.0011014594938847913, 509=0.0011014594938847913, 510=0.0011014594938847913, 511=0.0011014594938847913, 512=0.0011014594938847913, 513=0.0011014594938847913, 514=0.0011014594938847913, 516=0.0011014594938847913, 517=0.0011014594938847913, 518=0.0011014594938847913, 519=0.0011014594938847913, 522=0.0011014594938847913, 523=0.0011014594938847913, 524=0.0011014594938847913, 525=0.0011014594938847913, 526=0.0011014594938847913, 527=0.0011014594938847913, 528=0.0011014594938847913, 530=0.0011014594938847913, 531=0.0011014594938847913, 532=0.0011014594938847913, 533=0.0011014594938847913, 538=0.0011014594938847913, 539=0.0011014594938847913, 541=0.0011014594938847913, 542=0.0011014594938847913, 544=0.0011014594938847913, 547=0.0011014594938847913, 548=0.0011014594938847913, 549=0.0011014594938847913, 551=0.0011014594938847913, 553=0.0011014594938847913, 556=0.0011014594938847913, 557=0.0011014594938847913, 558=0.0011014594938847913, 559=0.0011014594938847913, 561=0.0011014594938847913, 562=0.0011014594938847913, 563=0.0011014594938847913, 566=0.0011014594938847913, 569=0.0011014594938847913, 572=0.0011014594938847913, 574=0.0011014594938847913, 575=0.0011014594938847913, 576=0.0011014594938847913, 578=0.0011014594938847913, 579=0.0011014594938847913, 580=0.0011014594938847913, 581=0.0011014594938847913, 584=0.0011014594938847913, 585=0.0011014594938847913, 586=0.0011014594938847913, 587=0.0011014594938847913, 589=0.0011014594938847913, 590=0.0011014594938847913, 591=0.0011014594938847913, 593=0.0011014594938847913, 594=0.0011014594938847913, 595=0.0011014594938847913, 596=0.0011014594938847913, 597=0.0011014594938847913, 598=0.0011014594938847913, 601=0.0011014594938847913, 605=0.0011014594938847913, 606=0.0011014594938847913, 607=0.0011014594938847913, 608=0.0011014594938847913, 609=0.0011014594938847913, 610=0.0011014594938847913, 612=0.0011014594938847913, 614=0.0011014594938847913, 616=0.0011014594938847913, 618=0.0011014594938847913, 621=0.0011014594938847913, 622=0.0011014594938847913, 623=0.0011014594938847913, 625=0.0011014594938847913, 626=0.0011014594938847913, 627=0.0011014594938847913, 628=0.0011014594938847913, 631=0.0011014594938847913, 632=0.0011014594938847913, 633=0.0011014594938847913, 636=0.0011014594938847913, 638=0.0011014594938847913, 641=0.0011014594938847913, 642=0.0011014594938847913, 643=0.0011014594938847913, 644=0.0011014594938847913, 645=0.0011014594938847913, 646=0.0011014594938847913, 647=0.0011014594938847913, 648=0.0011014594938847913, 649=0.0011014594938847913, 654=0.0011014594938847913, 655=0.0011014594938847913, 656=0.0011014594938847913, 657=0.0011014594938847913, 658=0.0011014594938847913, 659=0.0011014594938847913, 660=0.0011014594938847913, 661=0.0011014594938847913, 662=0.0011014594938847913, 663=0.0011014594938847913, 665=0.0011014594938847913, 666=0.0011014594938847913, 667=0.0011014594938847913, 668=0.0011014594938847913, 670=0.0011014594938847913, 671=0.0011014594938847913, 675=0.0011014594938847913, 676=0.0011014594938847913, 680=0.0011014594938847913, 682=0.0011014594938847913, 683=0.0011014594938847913, 684=0.0011014594938847913, 688=0.0011014594938847913, 691=0.0011014594938847913, 692=0.0011014594938847913, 693=0.0011014594938847913, 694=0.0011014594938847913, 695=0.0011014594938847913, 696=0.0011014594938847913, 697=0.0011014594938847913, 698=0.0011014594938847913, 699=0.0011014594938847913, 700=0.0011014594938847913, 706=0.0011014594938847913, 708=0.0011014594938847913, 709=0.0011014594938847913, 711=0.0011014594938847913, 715=0.0011014594938847913, 716=0.0011014594938847913, 718=0.0011014594938847913, 719=0.0011014594938847913, 720=0.0011014594938847913, 721=0.0011014594938847913, 722=0.0011014594938847913, 723=0.0011014594938847913, 725=0.0011014594938847913, 726=0.0011014594938847913, 727=0.0011014594938847913, 728=0.0011014594938847913, 729=0.0011014594938847913, 731=0.0011014594938847913, 732=0.0011014594938847913, 734=0.0011014594938847913, 736=0.0011014594938847913, 737=0.0011014594938847913, 738=0.0011014594938847913, 739=0.0011014594938847913, 742=0.0011014594938847913, 743=0.0011014594938847913, 745=0.0011014594938847913, 746=0.0011014594938847913, 748=0.0011014594938847913, 749=0.0011014594938847913, 750=0.0011014594938847913, 752=0.0011014594938847913, 753=0.0011014594938847913, 754=0.0011014594938847913, 756=0.0011014594938847913, 757=0.0011014594938847913, 761=0.0011014594938847913, 762=0.0011014594938847913, 764=0.0011014594938847913, 765=0.0011014594938847913, 766=0.0011014594938847913, 767=0.0011014594938847913, 768=0.0011014594938847913, 769=0.0011014594938847913, 770=0.0011014594938847913, 771=0.0011014594938847913, 774=0.0011014594938847913, 776=0.0011014594938847913, 778=0.0011014594938847913, 780=0.0011014594938847913, 782=0.0011014594938847913, 783=0.0011014594938847913, 786=0.0011014594938847913, 787=0.0011014594938847913, 788=0.0011014594938847913, 790=0.0011014594938847913, 791=0.0011014594938847913, 792=0.0011014594938847913, 793=0.0011014594938847913, 794=0.0011014594938847913, 796=0.0011014594938847913, 797=0.0011014594938847913, 800=0.0011014594938847913, 801=0.0011014594938847913, 803=0.0011014594938847913, 804=0.0011014594938847913, 806=0.0011014594938847913, 808=0.0011014594938847913, 813=0.0011014594938847913, 814=0.0011014594938847913, 815=0.0011014594938847913, 816=0.0011014594938847913, 819=0.0011014594938847913, 820=0.0011014594938847913, 824=0.0011014594938847913, 825=0.0011014594938847913, 828=0.0011014594938847913, 830=0.0011014594938847913, 831=0.0011014594938847913, 833=0.0011014594938847913, 834=0.0011014594938847913, 840=0.0011014594938847913, 842=0.0011014594938847913, 843=0.0011014594938847913, 847=0.0011014594938847913, 848=0.0011014594938847913, 849=0.0011014594938847913, 852=0.0011014594938847913, 854=0.0011014594938847913, 857=0.0011014594938847913, 858=0.0011014594938847913, 861=0.0011014594938847913, 866=0.0011014594938847913, 867=0.0011014594938847913, 868=0.0011014594938847913, 869=0.0011014594938847913, 870=0.0011014594938847913, 871=0.0011014594938847913, 875=0.0011014594938847913, 877=0.0011014594938847913, 878=0.0011014594938847913, 880=0.0011014594938847913, 881=0.0011014594938847913, 883=0.0011014594938847913, 885=0.0011014594938847913, 886=0.0011014594938847913, 891=0.0011014594938847913, 893=0.0011014594938847913, 894=0.0011014594938847913, 895=0.0011014594938847913, 896=0.0011014594938847913, 897=0.0011014594938847913, 899=0.0011014594938847913, 900=0.0011014594938847913, 905=0.0011014594938847913, 906=0.0011014594938847913, 907=0.0011014594938847913, 908=0.0011014594938847913, 909=0.0011014594938847913, 910=0.0011014594938847913, 911=0.0011014594938847913, 912=0.0011014594938847913, 913=0.0011014594938847913, 914=0.0011014594938847913, 916=0.0011014594938847913, 917=0.0011014594938847913, 921=0.0011014594938847913, 922=0.0011014594938847913, 924=0.0011014594938847913, 925=0.0011014594938847913, 929=0.0011014594938847913, 930=0.0011014594938847913, 931=0.0011014594938847913, 935=0.0011014594938847913, 938=0.0011014594938847913, 939=0.0011014594938847913, 940=0.0011014594938847913, 941=0.0011014594938847913, 943=0.0011014594938847913, 944=0.0011014594938847913, 945=0.0011014594938847913, 947=0.0011014594938847913, 950=0.0011014594938847913, 954=0.0011014594938847913, 955=0.0011014594938847913, 956=0.0011014594938847913, 957=0.0011014594938847913, 958=0.0011014594938847913, 959=0.0011014594938847913, 960=0.0011014594938847913, 961=0.0011014594938847913, 967=0.0011014594938847913, 968=0.0011014594938847913, 969=0.0011014594938847913, 970=0.0011014594938847913, 977=0.0011014594938847913, 978=0.0011014594938847913, 982=0.0011014594938847913, 984=0.0011014594938847913, 985=0.0011014594938847913, 986=0.0011014594938847913, 989=0.0011014594938847913, 990=0.0011014594938847913, 992=0.0011014594938847913, 993=0.0011014594938847913, 994=0.0011014594938847913, 996=0.0011014594938847913, 997=0.0011014594938847913}

 */